# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-05-02 09:16
from __future__ import unicode_literals

from django.db import migrations, models
import datetime

def add_promotional_codes(apps, schema_editor):
    """
    Add promotional codes for the 2016 "slim" campaign
    """

    User                = apps.get_model("user_mgr", "User")
    Diet                = apps.get_model("diet_mgr", "Diet")
    PromotionalCode     = apps.get_model("user_mgr", "PromotionalCode")

    # Our own promotional code for old users (cannot be activated when released...)
    old_code = PromotionalCode.objects.create(code="SLIM2016_OLD", name="Cook&Be - anciens", url="www.cookandbe.com",
                                   benefit="PREMIUM", can_be_activated_until=datetime.datetime(2016, 1, 1),
                                   benefit_until=datetime.datetime(2016, 7, 1))

    # Old users with either "slim" diet or "balanced" will benefit from code
    for user in User.objects.filter(diet__key__in=["slim", "balanced"]):
        user.promotional_codes.add(old_code)


    test_code = PromotionalCode.objects.create(code="TEST_KAL", name="Cook&Be - test", url="www.cookandbe.com",
                                   benefit="PREMIUM", can_be_activated_until=datetime.datetime(2016, 5, 20),
                                   benefit_until=datetime.datetime(2016, 7, 1))

    # Official codes
    for code, name, url in [('MISS-CORINNE', 'Miss petits produits', 'www.misspetitsproduits.com'),
                            ('REGIME-PERSO', 'Régime perso', 'auregime.fr'),
                            ('MIAM-CARO', 'Gourmicom', 'www.gourmicom.fr'),
                            ('ESTELLE-CUISINE', 'Cuisine et Métissage', 'www.cuisinemetissage.com'),
                            ('COOK-AND-LIFESTYLE', 'Délice Céleste', 'www.delice-celeste.com'),
                            ('MAMAN-CUISINE', 'Qques grammes de gourmandise', 'www.quelquesgrammesdegourmandise.com')]:
        PromotionalCode.objects.create(code=code, name=name, url=url,
                                       benefit="PREMIUM", can_be_activated_until=datetime.datetime(2016, 5, 20),
                                       benefit_until=datetime.datetime(2016, 7, 1))


    slim = Diet.objects.get(key="slim")
    slim.enabled = True
    slim.save()



class Migration(migrations.Migration):

    dependencies = [
        ('user_mgr', '0008_auto_20150903_1819'),
    ]

    operations = [
        migrations.CreateModel(
            name='PromotionalCode',
            fields=[
                ('code', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('url', models.CharField(max_length=100, null=True)),
                ('benefit', models.CharField(max_length=10)),
                ('can_be_activated_until', models.DateTimeField()),
                ('benefit_until', models.DateTimeField()),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='promotional_codes',
            field=models.ManyToManyField(to='user_mgr.PromotionalCode'),
        ),
        # migrations.RunPython(add_promotional_codes)
    ]
